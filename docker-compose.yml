version: "3.8"

services:
  api_gateway:
    build: ./api_gateway
    container_name: api_gateway
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      USER_SERVICE_URI: user_service:50051
      JWT_SECRET: ${JWT_SECRET}
      SERVICES_JWT_SECRET: ${SERVICES_JWT_SECRET}
  
  user_service:
    build: ./user_service
    container_name: user_service
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      PORT: 50051
      POSTGRES_URI: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=postgres port=5432 dbname=${POSTGRES_DB} sslmode=disable TimeZone=Asia/Jakarta"
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672
      SERVICES_JWT_SECRET: ${SERVICES_JWT_SECRET}
  
  email_service:
    build: ./email_service
    container_name: email_service
    ports:
      - "8081:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      MAILTRAP_API_TOKEN: ${MAILTRAP_API_TOKEN}
      MAILTRAP_API_URL: ${MAILTRAP_API_URL}
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672
      VERIFICATION_URL: localhost:8080/users/verify
  
  wash_station_service:
    build: ./wash_station_service
    container_name: wash_station_service
    ports:
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 50052
      SERVICES_JWT_SECRET: ${SERVICES_JWT_SECRET}
      POSTGRES_URI: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=postgres port=5432 dbname=${POSTGRES_DB} sslmode=disable TimeZone=Asia/Jakarta"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
